{"version":3,"sources":["components/cart/item.js","index.js","components/cart/app.js","components/emoji/emoji.jsx"],"names":["Item","props","id","name","amount","onClick","Sub","Id","disabled","count","Add","total","ReactDOM","render","path","component","useState","setCount","setDisabled","key","temp","i","style","width","toFixed","emoji","setEmoji","setStyle","className","document","getElementById"],"mappings":"gRAEe,SAASA,EAAKC,GAC3B,OACE,+BACE,oBAAIC,GAAG,OAAP,SAAeD,EAAME,OACrB,oBAAID,GAAG,OAAP,SAAeD,EAAMG,SACrB,6BACE,wBAAQC,QAAS,kBAAMJ,EAAMK,IAAIL,EAAMM,KAAKC,SAAUP,EAAMO,SAA5D,iBAIF,6BAAKP,EAAMQ,QACX,6BACE,wBAAQJ,QAAS,kBAAMJ,EAAMS,IAAIT,EAAMM,KAAvC,iBAEF,oBAAIL,GAAG,QAAP,SAAgBD,EAAMU,UAZfV,EAAMM,I,YCGnBK,IAASC,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,wCAAwCC,UCN3C,WAAgB,IAAD,EACXC,mBAAS,CAAC,KAAM,KAAM,MAAhCZ,EADqB,sBAEFY,mBAAS,CAAC,EAAG,EAAG,IAFd,mBAErBP,EAFqB,KAEdQ,EAFc,OAGID,mBAAS,EAAC,GAAM,GAAM,IAH1B,mBAGrBR,EAHqB,KAGXU,EAHW,KAK5B,SAASZ,EAAIa,GAEX,IADA,IAAIC,EAAI,YAAOX,GACNY,EAAI,EAAGA,EAAI,EAAGA,IAASA,IAAMF,GAAKC,EAAKC,KAEhD,GADAJ,EAASG,GACU,IAAfX,EAAMU,GAAY,CACpBC,EAAO,EAAC,GAAO,GAAO,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACND,EAAKC,GAAhBF,IAAQE,GACGb,EAASa,GAE1BH,EAAYE,IAIhB,SAASV,EAAIS,GAEX,IADA,IAAIC,EAAI,YAAOZ,GACNa,EAAI,EAAGA,EAAI,EAAGA,IACjBF,IAAQE,IAAGD,EAAKC,IAAK,GAE3BH,EAAYE,GACZA,EAAI,YAAOX,GACX,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IAASA,IAAMF,GAAKC,EAAKC,KAChDJ,EAASG,GAEX,OACE,sBAAKlB,GAAG,YAAR,UACE,kCACE,kCACE,6BACE,oBAAIA,GAAG,UAAP,6BAEF,6BACE,oBAAIoB,MAAO,CAAEC,MAAO,eAGxB,kCACE,cAACvB,EAAD,CACEO,GAAI,EACJJ,KAAK,iBACLC,OAAQ,IAAMA,EAAO,GACrBK,MAAOA,EAAM,GACbE,MAAO,WAAaF,EAAM,GAAKL,EAAO,GACtCI,SAAUA,EAAS,GACnBF,IAAKA,EACLI,IAAKA,IAEP,cAACV,EAAD,CACEO,GAAI,EACJJ,KAAK,cACLC,OAAQ,IAAMA,EAAO,GACrBK,MAAOA,EAAM,GACbE,MAAO,WAAaF,EAAM,GAAKL,EAAO,GACtCI,SAAUA,EAAS,GACnBF,IAAKA,EACLI,IAAKA,IAEP,cAACV,EAAD,CACEO,GAAI,EACJJ,KAAK,aACLC,OAAQ,IAAMA,EAAO,GACrBK,MAAOA,EAAM,GACbE,MAAO,WAAaF,EAAM,GAAKL,EAAO,GACtCI,SAAUA,EAAS,GACnBF,IAAKA,EACLI,IAAKA,UAIX,4BACE,qDAGIN,EAAO,GAAKK,EAAM,GAClBL,EAAO,GAAKK,EAAM,GAClBL,EAAO,GAAKK,EAAM,IAClBe,QAAQ,cDzEd,cAAC,IAAD,CAAOV,KAAK,gCAAgCC,UERnC,WAAkB,IAAD,EACJC,mBAAS,MADL,mBACvBS,EADuB,KAChBC,EADgB,OAEJV,mBAAS,eAFL,mBAEvBM,EAFuB,KAEhBK,EAFgB,KAc9B,OACE,sBAAKC,UAAU,YAAf,UACE,8CACA,oBAAIA,UAAWN,EAAOjB,QAb1B,WACgB,OAAVoB,GACFC,EAAS,MACTC,EAAS,eAGPD,EAAS,MACTC,EAAS,iBAMX,SACGF,eFPPI,SAASC,eAAe,W","file":"static/js/main.9361eedf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Item(props) {\r\n  return (\r\n    <tr key={props.Id}>\r\n      <td id=\"item\">{props.name}</td>\r\n      <td id=\"left\">{props.amount}</td>\r\n      <td>\r\n        <button onClick={() => props.Sub(props.Id)} disabled={props.disabled}>\r\n          -\r\n        </button>\r\n      </td>\r\n      <td>{props.count}</td>\r\n      <td>\r\n        <button onClick={() => props.Add(props.Id)}>+</button>\r\n      </td>\r\n      <td id=\"right\">{props.total}</td>\r\n    </tr>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Cart from \"./components/cart/app\";\nimport Emoji from \"./components/emoji/emoji\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/React_hooks_cart_emoji/shopping_cart\" component={Cart}/>\n      <Route path=\"/React_hooks_cart_emoji/emoji\" component={Emoji}/>\n  </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import React, { useState } from \"react\";\r\nimport Item from \"./item\";\r\nimport \"./app.css\";\r\n\r\nexport default function App() {\r\n  const [amount] = useState([2.25, 1.99, 3.5]);\r\n  const [count, setCount] = useState([0, 0, 0]);\r\n  const [disabled, setDisabled] = useState([true, true, true]);\r\n\r\n  function Sub(key) {\r\n    let temp = [...count];\r\n    for (let i = 0; i < 4; i++) if (i === key) temp[i]--;\r\n    setCount(temp);\r\n    if (count[key] === 1) {\r\n      temp = [false, false, false];\r\n      for (let i = 0; i < 3; i++) {\r\n        if (key === i) temp[i] = true;\r\n        else temp[i] = disabled[i];\r\n      }\r\n      setDisabled(temp);\r\n    }\r\n  }\r\n\r\n  function Add(key) {\r\n    let temp = [...disabled];\r\n    for (let i = 0; i < 3; i++) {\r\n      if (key === i) temp[i] = false;\r\n    }\r\n    setDisabled(temp);\r\n    temp = [...count];\r\n    for (let i = 0; i < 4; i++) if (i === key) temp[i]++;\r\n    setCount(temp);\r\n  }\r\n  return (\r\n    <div id=\"container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td id=\"heading\">Shopping Cart</td>\r\n          </tr>\r\n          <tr>\r\n            <hr style={{ width: \"367%\" }} />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <Item\r\n            Id={0}\r\n            name=\"Taco Seasoning\"\r\n            amount={\"$\" + amount[0]}\r\n            count={count[0]}\r\n            total={\"Total: $\" + count[0] * amount[0]}\r\n            disabled={disabled[0]}\r\n            Sub={Sub}\r\n            Add={Add}\r\n          />\r\n          <Item\r\n            Id={1}\r\n            name=\"Pinto Beans\"\r\n            amount={\"$\" + amount[1]}\r\n            count={count[1]}\r\n            total={\"Total: $\" + count[1] * amount[1]}\r\n            disabled={disabled[1]}\r\n            Sub={Sub}\r\n            Add={Add}\r\n          />\r\n          <Item\r\n            Id={2}\r\n            name=\"Sour Cream\"\r\n            amount={\"$\" + amount[2]}\r\n            count={count[2]}\r\n            total={\"Total: $\" + count[2] * amount[2]}\r\n            disabled={disabled[2]}\r\n            Sub={Sub}\r\n            Add={Add}\r\n          />\r\n        </tbody>\r\n      </table>\r\n      <p>\r\n        <strong>\r\n          Grand Total: $\r\n          {(\r\n            amount[0] * count[0] +\r\n            amount[1] * count[1] +\r\n            amount[2] * count[2]\r\n          ).toFixed(2)}\r\n        </strong>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./emoji.css\";\r\n\r\nexport default function Emoji() {\r\n  const [emoji, setEmoji] = useState(\":)\");\r\n  const [style, setStyle] = useState(\"emoji_smile\");\r\n\r\n  function changeEmoji() {\r\n    if (emoji === \":)\") {\r\n      setEmoji(\":(\");\r\n      setStyle(\"emoji_sad\");\r\n    }\r\n    else{\r\n        setEmoji(':)');\r\n        setStyle('emoji_smile');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <p>Emoji toggler</p>\r\n      <h1 className={style} onClick={changeEmoji}>\r\n        {emoji}\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}